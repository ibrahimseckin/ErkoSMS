@{
    ViewBag.Title = "Satış Listele/Güncelle";
}

<h2>@ViewBag.Title</h2>

@using ErkoSMS.Enums
@model OrderFilterParameters

@{
    var customers = (List<SelectListItem>)ViewBag.Customers;
    var salesState = (List<SelectListItem>)ViewBag.SaleStates;
    var currencies = (List<SelectListItem>)ViewBag.Currencies;
}

<div id="listSalesDiv" style="display:block">
    <div id="listSalesButtonDiv" style="margin-top: 20px;">
        @if (User.IsInRole(UserTypes.Administrator.Name) || User.IsInRole(UserTypes.Purchaser.Name) || User.IsInRole(UserTypes.WareHouseMan.Name))
        {
            <input type="button" id="getAllActiveOrders" value="Aktif Satışları Getir" />
            <input type="button" id="getAllOrders" value="Bütün Satışları Getir" />
        }
        else
        {
            <input type="button" id="getMyActiveOrders" value="Aktif Satışlarımı Getir" />
            <input type="button" id="getMyOrders" value="Satışlarımı Getir" />
        }
        <hr style="margin: 10px 0;" />
    </div>

    <div style="margin-top: 20px">
        <table id="salesTable" class="table table-bordered table-condensed table-hover table-responsive table-striped"></table>
    </div>
</div>


<script>
    var tb = $("#salesTable");

    $('#salesTable').on('click', 'td.editor-edit', function (e) {
        e.preventDefault();
        var rowToBeUpdated = $(this).closest('tr')[0];
        var orderId = rowToBeUpdated.cells[0].innerText;
        ERKOSMS.GetAjaxDialog("UpdateOrder?orderId=" + orderId, {}, false).then(function () {
        }), function (data) {
            ERKOSMS.ShowWarning(data);
        }
    });

    $('#salesTable').on('click', 'td.deleteOrder', function (e) {
        e.preventDefault();
        var rowToBeDeleted = $(this).closest('tr')[0];
        var orderId = rowToBeDeleted.cells[0].innerText;
        vex.dialog.confirm({
            message: "Seçilen satış silinecektir. Emin misiniz? ",
            callback: function (result) {
                if (result) {
                    ERKOSMS.AjaxAction("DeleteOrder?orderId=" + orderId, {}, false).then(function () {
                        rowToBeDeleted.remove();
                    }), function (data) {
                        ERKOSMS.ShowWarning(data);
                    }
                }
            }
        });
    });

    $('#listSalesButton').on('click', function () {
        document.getElementById("listSalesDiv").style.display = "block";
    });

    var destroyTable = function () {
        var tb = $("#salesTable");

        if ($.fn.dataTable.isDataTable(tb))
            tb.DataTable().destroy();

        tb.empty();
    };

    function GetOrders(action) {
        destroyTable();
        var columns = [
            { title: "Id", data: "OrderId", className: "data" },
            { title: "Satış Başlangıç Tarihi", data: "SalesStartDate", className: "data", type: "date" },
            { title: "Fatura Tarihi", data: "InvoiceDate", className: "data", type: "date" },
            { title: "Fatura No", data: "InvoiceNumber", className: "data" },
            { title: "İthalatçı", data: "Exporter.Name", className: "data" },
            { title: "Müşteri", data: "Customer.Name", className: "data" },
            { title: "Müşteri Ülkesi", data: "Customer.Country", className: "data" },
            { title: "Tutar", data: "TotalPrice", className: "data" },
            { title: "Kur", data: "Currency", className: "data" },
            { title: "Tutar(TL)", data: "TotalPriceTL", className: "data" },
            { title: "Durum", data: "SalesState", className: "data" },
            { title: "Yorum", data: "Comment", className: "data" },
            { title: "Taşıma Maliyeti", data: "TransportCost", className: "data" },
            { title: "Teslimat Şekli", data: "DeliveryType", className: "data" },
            { title: "Ödeme Şekli", data: "PaymentType", className: "data" },
            {
                data: null,
                className: "dt-center editor-edit",
                defaultContent: '<span class="btn btn-warning"><span class="glyphicon glyphicon-pencil"></span> Güncelle</span>',
                orderable: false
            }
        ];

        if(@Json.Encode(User.IsInRole(UserTypes.Administrator.Name)))
        {
            columns.push({
                data: null,
                className: "dt-center deleteOrder",
                defaultContent: '<span class="btn btn-danger"><span class="glyphicon glyphicon-pencil"></span>Sil</span>',
                orderable: false
            });
        }

        ERKOSMS.AjaxAction(action, {}, false).then(function (data) {
            var datatable = tb.DataTable({
                autoWidth: true,
                columns: columns,
                data: data,
                sDom: '<"top"Blif<"clear">>rt<"bottom"ip<"clear">>',
                buttons: [
                    {
                        extend: 'csv',
                        charset: 'UTF-8',
                        fieldSeparator: ';',
                        bom: true,
                        text: '<button type="button" class="btn btn-primary pull-right"><span class="glyphicon glyphicon-export"></span>Dışa Aktar</button ><br>',
                        exportOptions: {
                            columns: ".data"
                        },
                        filename: function () {
                            var dateNow = window.moment(new Date(), "DD.MM.YYYY").format("DD_MM_YYYY_HHmmss");
                            return "Satışlar_" + dateNow;
                        },
                    },
                ],
                aaSorting: [], // Initial sorting
                bInfo: true, // Info is not shown because the total count to show is not known
                searching: true, // Disable searching TODO: Enable searching if necessary
                paging: true, // Disable paging in outstanding
                pageLength: 50,
                deferRender: true,
                columnDefs: [
                    {
                        targets: [1, 2],
                        render: formatDate
                    },
                    {
                        targets: [8],
                        render: formatCurrency
                    },
                    {
                        targets: [10],
                        render: formatState
                    }
                ]
            });
        });
    }


    $("#getAllOrders").on("click", function () {
        GetOrders("GetAllOrders");
    }
    );

    $("#getAllActiveOrders").on("click", function () {
            GetOrders("GetAllActiveOrders");
        }
    );

    $("#getMyOrders").on("click", function() {
            GetOrders("GetMyOrders");
        }
    );

    $("#getMyActiveOrders").on("click", function() {
            GetOrders("GetMyActiveOrders");
        }
    );

    var formatDate = function (date) {
        if (date == null) {
            return '';
        }
        else {
            return window.moment(date).format("L");
        }

    }

    var formatCurrency = function (data) {
        if (data == 0) {
            return "TL";
        }
        else if (data == 1) {
            return "EUR";
        }
        else if (data == 2) {
            return "USD";
        }
    }

    var formatState = function (data) {
        if (data == -1) {
            return "";
        }
        else if (data == 0) {
            return "İç Satış İletildi";
        }
        else if (data == 1) {
            return "Fatura Kesildi - Yüklendi";
        }
        else if (data == 2) {
            return "Paketleme Bekleniyor";
        }
        else if (data == 3) {
            return "Nakliye Bekleniyor";
        }
        else if (data == 4) {
            return "Ödeme Geldi - Nakliye Bekleniyor";
        }
        else if (data == 5) {
            return "Paketleme Hazır";
        }
        else if (data == 6) {
            return "Paketleme Hazır - Ödeme Bekleniyor";
        }
        else if (data == 7) {
            return "Reddedildi";
        }
        else if (data == 8) {
            return "Cevap Bekleniyor";
        }
        else if (data == 9) {
            return "Satın Alma Talep Edildi";
        }
        else if (data == 10) {
            return "Satın Alma İşleme Alındı";
        }
        else if (data == 11) {
            return "Satın Alma Başarılı";
        }
        else if (data == 12) {
            return "Satın Alma Başarısız";
        }
    }

    $(function () {
        $("#getAllActiveOrders").click();
    });


</script>
<script src="/fonts/turkish-bold.js"></script>
<script src="/fonts/turkish-normal.js"></script>

