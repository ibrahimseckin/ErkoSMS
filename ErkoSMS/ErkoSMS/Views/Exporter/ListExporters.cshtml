@{
    ViewBag.Title = "İthalatçı Listele/Güncelle";
}

<h2>@ViewBag.Title</h2>

<div id="listExportersDiv" style="margin-top:20px;">
    <input type="button" id="ListAllExportersButton" value="Bütün İthalatçıları Listele" />
    <hr style="margin: 10px 0;" />
</div>
<div style="margin-top: 20px">
    <table id="exporterTable" class="table table-bordered table-condensed table-hover table-responsive table-striped"></table>
</div>


<script>
    var tb = $("#exporterTable");

    $('#exporterTable').on('click', 'td.editor-edit', function (e) {
        e.preventDefault();
        var rowToBeUpdated = $(this).closest('tr')[0];
        var exporterId = rowToBeUpdated.cells[0].innerText;
        ERKOSMS.GetAjaxDialog("UpdateExporter?id=" + exporterId, {}, false).then(function () {
        }), function (data) {
            ERKOSMS.ShowWarning(data);
        }
    });

    $('#exporterTable').on('click', 'td.deleteExporter', function (e) {
        e.preventDefault();
        var rowToBeDelleted = $(this).closest('tr')[0]
        var exporterId = rowToBeDelleted.cells[0].innerText;
        vex.dialog.confirm({
            message: "Seçilen ithalatçı silinecektir. Emin misiniz? ",
            callback: function (result) {
                if (result) {
                    ERKOSMS.AjaxAction("DeleteExporter?exporterId=" + exporterId, {}, false).then(function () {
                        rowToBeDelleted.remove();
                    }), function (data) {
                        ERKOSMS.ShowWarning(data);
                    }
                }
            }
        });
    });


    var listExporters = function () {
        destroyTable();
        ERKOSMS.AjaxAction("GetAllExporters", {}, false).then(function (data) {
            var datatable = tb.DataTable({
                autoWidth: true,
                columns: [
                    { title: "Id", data: "Id", className: "data" },
                    { title: "İthalatçı Adı", data: "Name", className: "data" },
                    { title: "Adres", data: "Address", className: "data" },
                    { title: "Ticaret Sicil No", data: "TradeRegisterNo", className: "data" },
                    { title: "VAT No", data: "VatNo", className: "data" },
                    { title: "Telefon", data: "PhoneNumber", className: "data" },
                    { title: "Fax", data: "FaxNumber", className: "data" },
                    {
                        data: null,
                        className: "dt-center editor-edit",
                        defaultContent: '<span class="btn btn-warning"><span class="glyphicon glyphicon-pencil"></span> Güncelle</span>',
                        orderable: false
                    },
                    {
                        data: null,
                        className: "dt-center deleteExporter",
                        defaultContent: '<span class="btn btn-danger"><span class="glyphicon glyphicon-pencil"></span>Sil</span>',
                        orderable: false
                    }
                ],
                data: data,
                sDom: '<"top"Blif<"clear">>rt<"bottom"ip<"clear">>',
                buttons: [
                    {
                        extend: 'csv',
                        charset: 'UTF-8',
                        fieldSeparator: ';',
                        bom: true,
                        text: '<button type="button" class="btn btn-primary pull-right"><span class="glyphicon glyphicon-export"></span>Dışa Aktar</button ><br>',
                        exportOptions: {
                            columns: ".data"
                        },
                        filename: function () {
                            var dateNow = window.moment(new Date(), "DD.MM.YYYY").format("DD_MM_YYYY_HHmmss");
                            return "İthalatçılar" + dateNow;
                        },
                    },
                ],
                aaSorting: [], // Initial sorting
                bInfo: true, // Info is not shown because the total count to show is not known
                searching: true, // Disable searching TODO: Enable searching if necessary
                paging: true, // Disable paging in outstanding
                pageLength: 50,
                deferRender: true
            });
        });
    }


    var destroyTable = function () {
        var tb = $("#exporterTable");

        if ($.fn.dataTable.isDataTable(tb))
            tb.DataTable().destroy();

        tb.empty();
    };

    $("#ListAllExportersButton").on("click", listExporters);

    listExporters();


</script>


